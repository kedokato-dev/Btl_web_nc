// <auto-generated />
using System;
using Btl_web_nc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Btl_web_nc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Btl_web_nc.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<int>("NewsletterId")
                        .HasColumnType("int")
                        .HasColumnName("newsletter_id");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("published_at");

                    b.Property<string>("Summary")
                        .HasColumnType("text")
                        .HasColumnName("summary");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NewsletterId" }, "newsletter_id");

                    b.ToTable("articles", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NewsletterId")
                        .HasColumnType("int")
                        .HasColumnName("newsletter_id");

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('success','failed')")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'success'");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("subject");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NewsletterId" }, "newsletter_id")
                        .HasDatabaseName("newsletter_id1");

                    b.HasIndex(new[] { "UserId" }, "user_id");

                    b.ToTable("email_logs", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.Newsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("rss_url");

                    b.Property<int>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topic_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TopicId" }, "topic_id");

                    b.ToTable("newsletters", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Frequency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('daily','weekly')")
                        .HasColumnName("frequency")
                        .HasDefaultValueSql("'daily'");

                    b.Property<DateTime?>("LastSentAt")
                        .HasColumnType("datetime")
                        .HasColumnName("last_sent_at");

                    b.Property<int>("NewsletterId")
                        .HasColumnType("int")
                        .HasColumnName("newsletter_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NewsletterId" }, "newsletter_id")
                        .HasDatabaseName("newsletter_id2");

                    b.HasIndex(new[] { "UserId", "NewsletterId" }, "user_id")
                        .IsUnique()
                        .HasDatabaseName("user_id1");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.Sysdiagram", b =>
                {
                    b.Property<int>("DiagramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("diagram_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DiagramId"));

                    b.Property<byte[]>("Definition")
                        .HasColumnType("longblob")
                        .HasColumnName("definition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("principal_id");

                    b.Property<int?>("Version")
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("DiagramId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PrincipalId", "Name" }, "principal_id")
                        .IsUnique();

                    b.ToTable("sysdiagrams", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .IsUnique();

                    b.ToTable("topics", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_email_confirmed");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pass_word");

                    b.Property<TimeOnly?>("PreferredTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasColumnName("preferred_time")
                        .HasDefaultValueSql("'08:00:00'");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Btl_web_nc.Models.Article", b =>
                {
                    b.HasOne("Btl_web_nc.Models.Newsletter", "Newsletter")
                        .WithMany("Articles")
                        .HasForeignKey("NewsletterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("articles_ibfk_1");

                    b.Navigation("Newsletter");
                });

            modelBuilder.Entity("Btl_web_nc.Models.EmailLog", b =>
                {
                    b.HasOne("Btl_web_nc.Models.Newsletter", "Newsletter")
                        .WithMany("EmailLogs")
                        .HasForeignKey("NewsletterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("email_logs_ibfk_2");

                    b.HasOne("Btl_web_nc.Models.User", "User")
                        .WithMany("EmailLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("email_logs_ibfk_1");

                    b.Navigation("Newsletter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Btl_web_nc.Models.Newsletter", b =>
                {
                    b.HasOne("Btl_web_nc.Models.Topic", "Topic")
                        .WithMany("Newsletters")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("newsletters_ibfk_1");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Btl_web_nc.Models.Subscription", b =>
                {
                    b.HasOne("Btl_web_nc.Models.Newsletter", "Newsletter")
                        .WithMany("Subscriptions")
                        .HasForeignKey("NewsletterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("subscriptions_ibfk_2");

                    b.HasOne("Btl_web_nc.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("subscriptions_ibfk_1");

                    b.Navigation("Newsletter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Btl_web_nc.Models.Newsletter", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("EmailLogs");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Btl_web_nc.Models.Topic", b =>
                {
                    b.Navigation("Newsletters");
                });

            modelBuilder.Entity("Btl_web_nc.Models.User", b =>
                {
                    b.Navigation("EmailLogs");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
