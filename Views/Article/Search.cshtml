@using Btl_web_nc.Models.ViewModels
@model SearchViewModel

<link rel="stylesheet" href="~/css/news.css" asp-append-version="true" />

<div class="container mt-4">
    <h1 class="mb-4 text-center">Kết quả tìm kiếm: "@Model.Query"</h1>
    <div id="articles-container" class="row">
        @if (Model.Articles.Any())
        {
            @foreach (var article in Model.Articles)
            {
                <div class="col-md-4 mb-4">
                    <div class="card article-card h-100" onclick="window.open('@article.Link', '_blank')">
                        @if (!string.IsNullOrEmpty(article.ImageUrl))
                        {
                            <div class="card-image">
                                <img src="@article.ImageUrl" class="card-img-top" alt="Article Image">
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@article.Title</h5>
                            <p class="card-text">@article.Summary</p>
                        </div>
                        <div class="card-footer text-muted text-end">
                            <small>Ngày đăng: @article.PublishedAt?.ToString("dd/MM/yyyy HH:mm")</small>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <div class="alert alert-warning" role="alert">
                    Không tìm thấy bài viết nào phù hợp với từ khóa "<strong>@Model.Query</strong>".
                </div>
            </div>
        }
    </div>
</div>

<div id="pagination-container" class="d-flex justify-content-center mt-4">
    <nav>
        <ul class="pagination">
            @if (Model.TotalPages > 1)
            {
                <!-- Previous page button -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link pagination-link" data-page="@(Model.CurrentPage - 1)"
                        href="javascript:void(0);">&laquo;</a>
                </li>

                @* Calculate range of page numbers to display *@
                int startPage = Math.Max(1, Model.CurrentPage - 2);
                int endPage = Math.Min(Model.TotalPages, startPage + 4);

                @* Ensure we show at least 5 pages if available *@
                if (endPage - startPage < 4)
                {
                    startPage = Math.Max(1, endPage - 4);
                }

                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link pagination-link" data-page="1" href="javascript:void(0);">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link pagination-link" data-page="@i" href="javascript:void(0);">@i</a>
                    </li>
                }

                @if (endPage < Model.TotalPages)
                {
                    @if (endPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <a class="page-link pagination-link" data-page="@Model.TotalPages"
                            href="javascript:void(0);">@Model.TotalPages</a>
                    </li>
                }

                <!-- Next page button -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link pagination-link" data-page="@(Model.CurrentPage + 1)"
                        href="javascript:void(0);">&raquo;</a>
                </li>
            }
        </ul>
    </nav>
</div>

<div id="loading-overlay" class="position-fixed d-none"
    style="top:0; left:0; width:100%; height:100%; background:rgba(255,255,255,0.7); z-index:1000; display:flex; justify-content:center; align-items:center;">
    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            const query = '@Model.Query';
            let isLoading = false;

            function loadArticles(page) {
                if (isLoading) return;
                isLoading = true;

                $('#loading-overlay').removeClass('d-none');

                const url = new URL(window.location.href);
                url.searchParams.set('page', page);
                window.history.pushState({ page }, '', url);

                $.ajax({
                    url: '/Article/Search',
                    type: 'GET',
                    data: { query: query, page: page },
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            $('#articles-container').html(response.articlesHtml);
                            $('#pagination-container').html(response.paginationHtml);
                            $('html, body').animate({
                                scrollTop: $('#articles-container').offset().top - 20
                            }, 200);
                            attachPaginationEvents();
                        } else {
                            showError(response.message || 'Lỗi không xác định khi tải bài viết', page);
                        }
                    },
                    error: function (xhr) {
                        console.error('Lỗi khi tải bài viết:', xhr);
                        let errorMessage = 'Không thể kết nối đến máy chủ.';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }
                        showError(errorMessage, page);
                    },
                    complete: function () {
                        $('#loading-overlay').addClass('d-none');
                        isLoading = false;
                    }
                });
            }

            function showError(message, page) {
                $('#articles-container').html(
                    `<div class="col-12 text-center">
                        <div class="alert alert-danger" role="alert">
                            ${message}
                            <button class="btn btn-sm btn-outline-danger ms-2" onclick="loadArticles(${page})">
                                <i class="bi bi-arrow-clockwise"></i> Thử lại
                            </button>
                        </div>
                    </div>`
                );
            }

            function attachPaginationEvents() {
                $('.pagination-link').off('click').on('click', function (e) {
                    e.preventDefault();
                    if ($(this).parent().hasClass('disabled') || $(this).parent().hasClass('active')) {
                        return;
                    }
                    const page = $(this).data('page');
                    loadArticles(page);
                });
            }

            attachPaginationEvents();

            $(window).on('popstate', function (e) {
                const url = new URL(window.location.href);
                const page = parseInt(url.searchParams.get('page')) || 1;
                loadArticles(page);
            });
        });
    </script>
}